campaignTrail_temp.election_json = [
    {
        "model": "campaign_trail.election",
        "pk": 20,
        "fields": {
            "year": 2016,
            "display_year": "0030 - 0033AD: Abba, Father!",
            "summary": "<p>In the beginning was the Word, and the Word was with God, and the Word was God.<br><br>He was in the beginning with God.<br><br>All things came into being through nim, and without nim not one thing came into being.<br><br>What has come into being in him was life, and the life was the light of all people.<br><br>The light shines the darkness, and the darkness did not overtake it.",
            "image_url": "https://files.catbox.moe/va9a9m.jpg",
            "winning_electoral_vote_number": 270,
            "advisor_url": "https://files.catbox.moe/z3a0h2.jpg",
            "recommended_reading": "<ul>\n<li><a href=https://www.chicagotribune.com/opinion/editorials/ct-edit-chicago-tribune-biden-endorsement-20200925-lnyxsb5qvrftnjjmj3rnzj33jy-story.html>Our Case For Joe Biden</a></li>\n<li><a href=https://nationalinterest.org/feature/case-trump-166808>The Case For Trump</a></li>\n<li><a href=https://www.npr.org/2020/11/18/935730100/how-biden-won-ramping-up-the-base-and-expanding-margins-in-the-suburbs>How Biden Won: Ramping Up The Base And Expanding Margins In The Suburbs</a></li>\n<li><a href=https://www.prospectmagazine.co.uk/politics/donald-trump-joe-biden-us-election-almost-win-votes-concede>Why Did Trump Almost Win?</a></li>\n<li><a href=https://www.hoover.org/research/no-evidence-voter-fraud-guide-statistical-claims-about-2020-election>No Evidence For Voter Fraud: A Guide To Statistical Claims About The 2020 Election</a></li>\n</ul>",
            "has_visits": 1,
            "no_electoral_majority_image": "../static/images/2012-no-majority.jpg"
        }
    }
]

campaignTrail_temp.temp_election_list = [
    {
        "id": 20,
        "year": 2016,
        "is_premium": 0,
        "display_year": "0030 - 0033AD: Abba, Father!"
    }
]

campaignTrail_temp.credits = "Tex"

campaignTrail_temp.global_parameter_json = [
    {
        "model": "campaign_trail.global_parameter",
        "pk": 1,
        "fields": {
            "vote_variable": 1.125,
            "max_swing": 0.12,
            "start_point": 0.94,
            "candidate_issue_weight": 10,
            "running_mate_issue_weight": 3,
            "issue_stance_1_max": -0.71,
            "issue_stance_2_max": -0.3,
            "issue_stance_3_max": -0.125,
            "issue_stance_4_max": 0.125,
            "issue_stance_5_max": 0.3,
            "issue_stance_6_max": 0.71,
            "global_variance": 0.01,
            "state_variance": 0.005,
            "question_count": 32,
            "default_map_color_hex": "#C9C9C9",
            "no_state_map_color_hex": "#999999"
        }
    }
]

campaignTrail_temp.candidate_json = [
    {
        "model": "campaign_trail.candidate",
        "pk": 1001,
        "fields": {
            "first_name": "Jesus",
            "last_name": "of Nazareth",
            "election": 20,
            "party": "Judaizer",
            "state": "Galilee",
            "priority": 1,
            "description": "<i><p>For I have come down from heaven not to do my own will but the will of him who sent me.</i><br><br>Jesus of Nazareth, more commonly referred to as simply \"Jesus\" or \"Rabboni\" by his followers, to some has \"He has gone out of his mind.\" To others, Jesus is a wise teacher, perhaps one of the prophets of old; yet, to a very select few, Jesus is some being who has seen the face of God and who has been sent by Him to fulfil the Scriptures.<br><br>For now. Jesus is a teacher of the Torah who must evade the gaze of Roman and Jewish authorities while gaining the support of the people.<br><br>Could Jesus plan an open revolt against the Roman authorities? To be crowned \"King of the Jews\"?",
            "color_hex": "#30bf30",
            "secondary_color_hex": null,
            "is_active": 1,
            "image_url": "https://files.catbox.moe/rtrjvm.jpg",
            "electoral_victory_message": "This guy wins!",
            "electoral_loss_message": "This guy loses!",
            "no_electoral_majority_message": "We all win?",
            "description_as_running_mate": null,
            "candidate_score": 1,
            "running_mate": false
        }
    },
    {
        "model": "campaign_trail.candidate",
        "pk": 1002,
        "fields": {
            "first_name": "The",
            "last_name": "Disapprovers",
            "election": 20,
            "party": "Anti-Judaizer",
            "state": "Galilee, etc.",
            "priority": 1,
            "description": "<p>Put description here</p>",
            "color_hex": "#ba3232",
            "secondary_color_hex": null,
            "is_active": 0,
            "image_url": "https://www.jetsimon.com/public/candidateexample.png",
            "electoral_victory_message": "This guy wins!",
            "electoral_loss_message": "This guy loses!",
            "no_electoral_majority_message": "We all win?",
            "description_as_running_mate": "<p>This is a running mate description it only shows for running mates</p>",
            "candidate_score": 1,
            "running_mate": false
        }
    },
    {
        "model": "campaign_trail.candidate",
        "pk": 1003,
        "fields": {
            "first_name": "",
            "last_name": "Simon",
            "election": 20,
            "party": "Judaizer",
            "state": "Galilee",
            "priority": 1,
            "description": "<p>Put description here</p>",
            "color_hex": "#0000FF",
            "secondary_color_hex": null,
            "is_active": 0,
            "image_url": "https://files.catbox.moe/y1hg5b.jpg",
            "electoral_victory_message": "This guy wins!",
            "electoral_loss_message": "This guy loses!",
            "no_electoral_majority_message": "We all win?",
            "description_as_running_mate": "<i><p>And I tell you, you are Peter, and on this rock i will build my church, and the gates of Hades will not prevail against it.</i><br><br>Simon and his brother Andrew are obscure fishermen in the region of Galilee in the Roman province of Judses.<br><br>Although presently considering himself a disciple of John the Baptist. Simon will soon be commissioned to become the right-hand man of Jesus of Nazareth.<br><br>Simon is known to find it hard to interpret the parables of teachers, and is brash in his support for a cause.",
            "candidate_score": 1,
            "running_mate": true
        }
    },
    {
        "model": "campaign_trail.candidate",
        "pk": 1004,
        "fields": {
            "first_name": "The",
            "last_name": "Disapprovers",
            "election": 20,
            "party": "Anti-Judaizer",
            "state": "Galilee, etc.",
            "priority": 1,
            "description": "<p>Put description here</p>",
            "color_hex": "#0000FF",
            "secondary_color_hex": null,
            "is_active": 0,
            "image_url": "https://www.jetsimon.com/public/candidateexample.png",
            "electoral_victory_message": "This guy wins!",
            "electoral_loss_message": "This guy loses!",
            "no_electoral_majority_message": "We all win?",
            "description_as_running_mate": null,
            "candidate_score": 1,
            "running_mate": true
        }
    }
]

campaignTrail_temp.running_mate_json = [
    {
        "model": "campaign_trail.running_mate",
        "pk": 120134,
        "fields": {
            "candidate": 1001,
            "running_mate": 1003
        }
    },
    {
        "model": "campaign_trail.running_mate",
        "pk": 122818,
        "fields": {
            "candidate": 1002,
            "running_mate": 1004
        }
    }
]

campaignTrail_temp.opponents_default_json = [
    {
        "election": 20,
        "candidates": [
            1001,
            1002
        ]
    }
]

campaignTrail_temp.opponents_weighted_json = [
    {
        "election": 20,
        "candidates": [
            1001,
            1002
        ]
    }
]

jet_data = {
    "headerColor": "#453a39",
    "windowColor": "#b3afa6",
    "containerColor": "#c4b9a7",
    "innerWindowColor": "#b3afa6",
    "bannerImageUrl": "https://files.catbox.moe/ydrpn3.png",
    "backgroundImageUrl": "https://files.catbox.moe/e0z1h2.jpg",
    "endingTextColor": "#000000",
    "customQuote": "Aboon Dbashmayo...",
    "gameTitle": "בקמפיין הפרסום"
}

//#startcode


corrr = '\n              <h2>בקמפיין הפרסום</h2><font id="wittyquote" size="4" color="white"><em>Aboon Dbashmayo...</em></font>\n            ';


nct_stuff.themes[nct_stuff.selectedTheme].coloring_title = "#453a39";

nct_stuff.themes[nct_stuff.selectedTheme].coloring_window = "#b3afa6";

document.getElementsByClassName("game_header")[0].style.backgroundColor = nct_stuff.themes[nct_stuff.selectedTheme].coloring_title;

$("#game_window")[0].style.backgroundColor = nct_stuff.themes[nct_stuff.selectedTheme].coloring_window;

$(".container")[0].style.backgroundColor = "#c4b9a7";

$("#game_window")[0].style.borderColor = "#b3afa6"

$(".container")[0].style.border = ".2em solid #c4b9a7"

document.getElementById("header").src = "https://files.catbox.moe/ydrpn3.png";

document.body.background = "https://files.catbox.moe/e0z1h2.jpg";

document.head.innerHTML += "<style>#results_container {color:#000000;} .inner_window_w_desc {background-color:#b3afa6!important;}</style>";

campaignTrail_temp.modBoxTheme = {
  "header_color": "#453a39",
  "header_text_color": "#ffffff",
  "description_text_color": "#000000",
  "description_background_color": "#b3afa6",
  "main_color": "#c4b9a7",
  "secondary_color": "#453a39",
 "ui_text_color": "#ffffff"
}

$("#music_player")[0].children[0].style.display="none"

$("#music_player")[0].children[1].style.display="none"


document.getElementById("modLoadReveal").style.display="none"

document.getElementById("modloaddiv").style.display="none"


musicBox = document.getElementById("music_player")

musicBox.style.display=""


var trackSel;

e = campaignTrail_temp

e.selectedSoundtrack = 0


toTime = (seconds) => {

  var date = new Date(null);

  date.setSeconds(seconds);

  return date.toISOString().substr(11, 8);

}


generateTime = () => {

    // Get the audio element

    var audio = document.getElementById("campaigntrailmusic");


    timeTracker = document.createElement("div");

    timeTracker.style = `

      text-align:left;

      border-style:solid;

      border-width:3px;

      height:150px;

      width:200px;

      background-color:#b3afa6;

      float:right;

      padding: 10px;

    `

    $("#trackSelParent")[0].prepend(timeTracker);

    $("#trackSelParent")[0].prepend(document.createElement("br"));


    // Create a new element to display the current position of the audio

    var positionDisplay = document.createElement("gg");

    positionDisplay.id = "position-display";


    // Create a new slider element to change the time

    var timeSlider = document.createElement("input");

    timeSlider.type = "range";

    timeSlider.min = 0;

    timeSlider.max = 1;

    timeSlider.step = 0.001;

    timeSlider.value = 0;

    timeSlider.style.width = "200px";

    timeSlider.id = "time-slider";


    var pausePlay = document.createElement("button");

    pausePlay.id = "position-display";

    pausePlay.innerHTML = "<b>Pause</b>"

    pausePlay.style.width = "100%";



    pausePlay.addEventListener("click", event => {

      event.preventDefault();

      updatePositionDisplay();

      let audio = document.getElementById("campaigntrailmusic");

      if (audio.paused) {

        audio.play();

        event.target.innerHTML = "<b>Pause</b>";

        return;

      }

      audio.pause();

      event.target.innerHTML = "<b>Play</b>";

      return;

    })


    var volumeLabel = document.createElement("gg");

    volumeLabel.id = "volume-label";

    volumeLabel.innerHTML = "<br><b>Volume: </b>"


    var volumeSlider = document.createElement("input");

    volumeSlider.type = "range";

    volumeSlider.min = 0;

    volumeSlider.max = 1;

    volumeSlider.step = 0.001;

    volumeSlider.value = 0;

    volumeSlider.style.width = "200px";

    volumeSlider.id = "volume-slider";


    volumeSlider.value = audio.volume;


    timeTracker.appendChild(pausePlay);

    timeTracker.appendChild(document.createElement("br"));

    timeTracker.appendChild(document.createElement("br"));

    timeTracker.appendChild(positionDisplay);

    timeTracker.appendChild(timeSlider);

    timeTracker.appendChild(volumeLabel);

    timeTracker.appendChild(volumeSlider);


    updatePositionDisplay();


    //for (let i = 0; i < 10; i++)

    //timeTracker.append(document.createElement("br"));



    // Function to update the position display

    function updatePositionDisplay() {

      positionDisplay.innerHTML = "<b>Time:</b> " + toTime(audio.currentTime) + "<br>";

      timeSlider.value = audio.duration ? audio.currentTime / audio.duration : 0;

    }


    // Function to change the time of the audio

    function changeTime() {

      positionDisplay.innerHTML = "<b>Time:</b> " + toTime(audio.currentTime) + "<br>";

      audio.currentTime = timeSlider.value * audio.duration;

    }


    updateVolume = event => {

      audio.volume = event.target.value;

    }

   

    // Update the position display and slider every second

    setInterval(updatePositionDisplay, 1000);


    // Listen for changes to the time slider and change the time of the audio

    timeSlider.addEventListener("input", changeTime);

    volumeSlider.addEventListener("input", updateVolume)

}


function newMusicPlayer() {

  trackSel = document.createElement("div");

  trackSel.id = "trackSelParent"

  let z = `<br><br><br><br><br><br><br><br><br><br><div id='trackSel' style="text-align:left;border-style:solid;border-width:3px;overflow-y: scroll;overflow-x: hidden;height:200px; width:400px;background-color:#b3afa6;float:right;">`

  z += `<b><select id='selectSoundtrack'><option value='`+soundtracks[e.selectedSoundtrack].name+`'>`+soundtracks[e.selectedSoundtrack].name+"</option>"

  for (i in soundtracks) {

    if (soundtracks[e.selectedSoundtrack] != soundtracks[i]) {

      z += `<option value='`+soundtracks[i].name+`'>`+soundtracks[i].name+`</option>`

    }

  }

  z += `</select></b><br><br>`

  // <label><input type="radio" name="option" value="option1">Option 1</label><br>

  for (i in soundtracks[e.selectedSoundtrack].tracklist) {

    let a = soundtracks[e.selectedSoundtrack].tracklist[i]

    let b = `<label><input class="trackSelector" type="radio" name="trackSelector" value="`+i+`">`+a.name+`</label><br>`

    z += b

  }

  z += "</div><br><br>"

  trackSel.innerHTML = z


  // select correct song


  musicBox.appendChild(trackSel);

  Array.from(document.getElementById("trackSel").children).filter(f=>{

    return f.tagName == "LABEL"

  }).map(f=>f.children[0])[0].checked = true


  // set soundtrack changer


  soundtrackSelector = document.getElementById("selectSoundtrack")

  soundtrackSelector.onchange = function() {

    for (i in soundtracks) {

      if (soundtracks[i].name == soundtrackSelector.value) {

        e.selectedSoundtrack = i

        break

      }

    }

    document.getElementById("trackSelParent").remove()

    newMusicPlayer()

  }


  var matches = document.querySelectorAll('.trackSelector');


  for (match in matches) {

    matches[match].onchange = function() {

      musicBox.children[2].src = soundtracks[e.selectedSoundtrack].tracklist[this.value].url

      musicBox.children[2].currentTime = 0

    }

  }


  musicBox.children[2].loop = false

  musicBox.children[2].src = soundtracks[e.selectedSoundtrack].tracklist[0].url


  musicBox.children[2].onended = function() {

    console.log("next track")

    let selected = Number(document.querySelector('input[name="trackSelector"]:checked').value);

    let newSel = clamp(selected+1, soundtracks[e.selectedSoundtrack].tracklist.length-1, 0)

    let buttons = Array.from(document.getElementById("trackSel").children).filter(f=>{

      return f.tagName == "LABEL"

    }).map(f=>f.children[0])

    //let selectedIndex = buttons.map(f=>f.children[0]).map(f=>f.checked)

    buttons[newSel].click()

  }


  for (w = 0; w < 7; w++) {

    document.getElementById("trackSelParent").appendChild(document.createElement("br"))

  }

 

  generateTime();

}


clamp = function(a, max, min, overflow=true) {

  if (overflow) {

    return a > max ? min : a < min ? max : a;

  }

  return a > max ? max : a < min ? min : a;

}


// Track list


var soundtracks = {

  0: {

    name: "Stranger From Heaven",

    tracklist: [

      {

        name: "Hymn Of The Cherubim (Pyotr Tchaikovsky)",

        url: "https://files.catbox.moe/x732eb.mp3",

      },

      {

        name: "All Creation Rejoices In Thee (St. Elisabeth Convent)",

        url: "https://files.catbox.moe/0rgvl6.mp3",

      },

      {

        name: "Truth/Ewnet Silehone (OTYDallas)",

        url: "https://files.catbox.moe/0vx96c.mp3",

      },

      {

        name: "Psalm 22 (Westminster Abbey Choir)",

        url: "https://files.catbox.moe/u8qz12.mp3",

      },

    ],

  },

}



newMusicPlayer()

//#endcode
