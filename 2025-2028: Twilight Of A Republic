campaignTrail_temp.election_json = [
    {
        "model": "campaign_trail.election",
        "pk": 21,
        "fields": {
            "year": 2020,
            "summary": "<p>November 2024. A catacalysmic loss for the party. The following months were marked with stale dissapointment. Why? What had we done? Was it our fault? Was it written in the stars? Was this ordained by god? Why? The more asked, the less understood. The Democratic Party found itself wrestling with it's identity, deciding it's direction, planning, stalking. The dry listless air provided little respite from the mood of dour disapointment.<br><br>It wasn't like 2016. That stung. But it was a fluke, right? A silly fucking gag, some stupid blip, Atlas stumbling for a moment. That was all proven wrong. He was able to champion a victory that had shook the earth to it's core, carrying with him a trifecta and new revitalization of strength.",
            "image_url": "https://files.catbox.moe/z8rlgt.png",
            "winning_electoral_vote_number": 270,
            "advisor_url": "https://d3i6fh83elv35t.cloudfront.net/static/2024/08/GettyImages-2166238061-768x512.jpg",
            "recommended_reading": "<ul>\n<li><a href=https://www.chicagotribune.com/opinion/editorials/ct-edit-chicago-tribune-biden-endorsement-20200925-lnyxsb5qvrftnjjmj3rnzj33jy-story.html>Our Case For Joe Biden</a></li>\n<li><a href=https://nationalinterest.org/feature/case-trump-166808>The Case For Trump</a></li>\n<li><a href=https://www.npr.org/2020/11/18/935730100/how-biden-won-ramping-up-the-base-and-expanding-margins-in-the-suburbs>How Biden Won: Ramping Up The Base And Expanding Margins In The Suburbs</a></li>\n<li><a href=https://www.prospectmagazine.co.uk/politics/donald-trump-joe-biden-us-election-almost-win-votes-concede>Why Did Trump Almost Win?</a></li>\n<li><a href=https://www.hoover.org/research/no-evidence-voter-fraud-guide-statistical-claims-about-2020-election>No Evidence For Voter Fraud: A Guide To Statistical Claims About The 2020 Election</a></li>\n</ul>",
            "has_visits": 1,
            "no_electoral_majority_image": "https://www.jetsimon.com/public/static/images/2012-no-majority.jpg",
            "creator": "Dan Bryan",
            "display_year": "2025-2028: Twilight Of A Republic"
        }
    }
]

campaignTrail_temp.candidate_json = [
    {
        "model": "campaign_trail.candidate",
        "pk": 300,
        "fields": {
            "first_name": "The",
            "last_name": "Democratic Party",
            "election": 21,
            "party": "Democratic",
            "state": "Nationwide",
            "priority": 1,
            "description": "<li><b>Name: The Democratic Party</b></li><li><b>Ideology: Liberalism</b></li><li><b>Role: His Majesty's Most Loyal Opposition</b></li><p>Reduced to nothing more than a pure opposition party, the Democratic party's main defining feature is it's disdain for President Donald J. Trump. This relationship is the primary vector of it's importance. The party has tried, and failed thusfar, to create a new consensus, with disparate factions vying for power, yet no matter how much they push and pull, it only serves to tear it at the seams. The party's power is expressed in short bursts of energy, culminating in upsets and setbacks, yet lacking consistency to gain ground.<br><br>Some wish it could be more. That it could return to its glory days; the nostalgia for the past administrationsâ€”Obama, Clinton, Kennedy. It all weighs so heavy. They fantasize about times when they weren't relegated to playing catchup, trying to throw themselves against the shifting waters. Some believe in this dream becoming true, but many simply have lost the faith, cynically accepting the position as a secondary party, or wishing for a new party to supplant it.",
            "color_hex": "#1f2e4f",
            "secondary_color_hex": "#1f2e4f",
            "is_active": 1,
            "image_url": "https://files.catbox.moe/uutsw9.webp",
            "electoral_victory_message": "<h3>Congratulations! You have won the 2020 election.</h3><p>Things may have been closer and more contested than you hoped for, but the final result remains. Can you help bring the country back together after a tumultuous few years? Or will you be seen as a lame duck from the first day -- unable to keep the two wings of your party coordinated? Time will tell.</p>",
            "electoral_loss_message": "<h3>Sorry! You have lost the 2020 election.</h3><p>After an election in which many of your supporters claimed democracy itself was at stake, what happens now? Perhaps the party will need to go in a completely different direction in 2024. As for yourself, it seems that your long, illustrious political career has surely drawn to a close.</p>",
            "no_electoral_majority_message": "<h3>Sorry! You have lost the 2020 election.</h3><p>In spite of the 269-269 tie in the electoral college, Republicans control a majority of state delegations in the House of Representatives. After an election in which many of your supporters claimed democracy itself was at stake, what happens now? Perhaps the party will need to go in a completely different direction in 2024.</p>",
            "description_as_running_mate": "",
            "candidate_score": 1,
            "running_mate": false
        }
    },
    {
        "model": "campaign_trail.candidate",
        "pk": 301,
        "fields": {
            "first_name": "The",
            "last_name": "Republican Party",
            "election": 21,
            "party": "Republican",
            "state": "Nationwide",
            "priority": 2,
            "description": "<p>President Donald Trump enters the campaign with the advantages of incumbency, yet seems to be the underdog for a second time. Can Trump piece together a winning coalition again, and will it be the same one that got him over the finish line in 2016? The pandemic and Black Lives Matter movement only serve to complicate his task even further.</p>",
            "color_hex": "#4f211f",
            "secondary_color_hex": "#4f211f",
            "is_active": 0,
            "image_url": "https://upload.wikimedia.org/wikipedia/commons/thumb/b/b4/Republican_Party_Disc_%28alternate%29.svg/1280px-Republican_Party_Disc_%28alternate%29.svg.png",
            "electoral_victory_message": "<h3>Congratulations! You have won the 2020 election.</h3><p>For the second time in a row, many analysts saw a victory for you as practically impossible. But whatever they say, it is clear that your Make America Great Again agenda has been vindicated. Where do you take things from here?</p>",
            "electoral_loss_message": "<h3>Sorry! You have lost the 2020 election.</h3><p>After an election in which many of your supporters claimed democracy itself was at stake, what happens now? Many analysts believe the party will need to go in a completely different direction next time. As for yourself, will you take these results sitting down, or will you prepare yourself for an epic political comeback in 2024?</p>",
            "no_electoral_majority_message": "<h3>Congratulations! You have won the 2020 election.</h3><p>In spite of the 269-269 tie in the electoral college, Republicans control a majority of state delegations in the House of Representatives. A lot of liberals are absolutely distraught and outraged that the election came down to such a technicality, but hey, those are the rules!</p>",
            "description_as_running_mate": "",
            "candidate_score": 1,
            "running_mate": false
        }
    },
    {
        "model": "campaign_trail.candidate",
        "pk": 302,
        "fields": {
            "first_name": "The",
            "last_name": "Insignificant Parties",
            "election": 21,
            "party": "Libertarian/Others",
            "state": "Nationwide",
            "priority": 3,
            "description": "'",
            "color_hex": "#321f4f",
            "secondary_color_hex": "#321f4f",
            "is_active": 0,
            "image_url": "'",
            "electoral_victory_message": "'",
            "electoral_loss_message": "'",
            "no_electoral_majority_message": "'",
            "description_as_running_mate": "'",
            "candidate_score": 1,
            "running_mate": false
        }
    },
    {
        "model": "campaign_trail.candidate",
        "pk": 303,
        "fields": {
            "first_name": "The",
            "last_name": "More Insignificant Parties",
            "election": 21,
            "party": "Various",
            "state": "Various",
            "priority": 4,
            "description": "'",
            "color_hex": "#264f1f",
            "secondary_color_hex": "#264f1f",
            "is_active": 0,
            "image_url": "'",
            "electoral_victory_message": "'",
            "electoral_loss_message": "'",
            "no_electoral_majority_message": "'",
            "description_as_running_mate": "'",
            "candidate_score": 1,
            "running_mate": false
        }
    },
    {
        "model": "campaign_trail.candidate",
        "pk": 304,
        "fields": {
            "first_name": "Ken",
            "last_name": "Martin",
            "election": 21,
            "party": "Democratic",
            "state": "Minnesota",
            "priority": 5,
            "description": "'",
            "color_hex": "#0000FF",
            "secondary_color_hex": "#90C0FF",
            "is_active": 0,
            "image_url": "https://files.catbox.moe/wxvfgp.jpg",
            "electoral_victory_message": "'",
            "electoral_loss_message": "'",
            "no_electoral_majority_message": "'",
            "description_as_running_mate": "<p>Kenneth Nathan Martin. A desperate man. A functionary of Minnesota's Democratic Farmer-Labor organs, Ken Martin has made his reputation as a reliable steward of the Democratic brand and a liberal, making him the party elite's choice of leader. He is tasked with the nigh impossible task of reviving a dying opposition party into a vallant fighting force which can overcome the institutional pressures keeping him down.<br><br>He must contend with progressives, moderates, liberals, and everything in between. It will take work, it will require menouevering and negotiation and coordination with Congress Democrats to prove they are capable of shaping policy, even at a disadvantage. If he is unable to do this, the Democrats, and even America, may be lost in the wind, swept up in the currents of nationalism that has been the undoing of many democracies before it.",
            "candidate_score": 0,
            "running_mate": true
        }
    },
    {
        "model": "campaign_trail.candidate",
        "pk": 309,
        "fields": {
            "first_name": "JD",
            "last_name": "Vance",
            "election": 21,
            "party": "Republican",
            "state": "Ohio",
            "priority": 10,
            "description": "'",
            "color_hex": "#FF0000",
            "secondary_color_hex": "#FFA0A0",
            "is_active": 0,
            "image_url": "https://upload.wikimedia.org/wikipedia/commons/thumb/f/f3/January_2025_Official_Vice_Presidential_Portrait_of_JD_Vance.jpg/1280px-January_2025_Official_Vice_Presidential_Portrait_of_JD_Vance.jpg",
            "electoral_victory_message": "'",
            "electoral_loss_message": "'",
            "no_electoral_majority_message": "'",
            "description_as_running_mate": "<p>Mike Pence has served as your Vice President for the past four years, sticking to all of your talking points and staying out of the limelight. Most feel he should be rewarded for this loyalty with another turn on the top of the ticket. He also helps shore up your support with social conservatives.</p>",
            "candidate_score": 0,
            "running_mate": true
        }
    },
    {
        "model": "campaign_trail.candidate",
        "pk": 311,
        "fields": {
            "first_name": "Joe",
            "last_name": "Manchin",
            "election": 21,
            "party": "Independent/No Labels",
            "state": "West Virginia",
            "priority": 12,
            "description": "'",
            "color_hex": "#FFFF00",
            "secondary_color_hex": "#FFFFC0",
            "is_active": 0,
            "image_url": "'",
            "electoral_victory_message": "'",
            "electoral_loss_message": "'",
            "no_electoral_majority_message": "'",
            "description_as_running_mate": "'",
            "candidate_score": 0,
            "running_mate": true
        }
    },
    {
        "model": "campaign_trail.candidate",
        "pk": 312,
        "fields": {
            "first_name": "Jill",
            "last_name": "Stein",
            "election": 21,
            "party": "Green",
            "state": "Massachusetts",
            "priority": 13,
            "description": "'",
            "color_hex": "#00C100",
            "secondary_color_hex": "#A1FFA1",
            "is_active": 0,
            "image_url": "'",
            "electoral_victory_message": "'",
            "electoral_loss_message": "'",
            "no_electoral_majority_message": "'",
            "description_as_running_mate": "'",
            "candidate_score": 0,
            "running_mate": false
        }
    }
]

campaignTrail_temp.running_mate_json = [
    {
        "model": "campaign_trail.running_mate",
        "pk": 200,
        "fields": {
            "candidate": 300,
            "running_mate": 304
        }
    },
    {
        "model": "campaign_trail.running_mate",
        "pk": 205,
        "fields": {
            "candidate": 301,
            "running_mate": 309
        }
    },
    {
        "model": "campaign_trail.running_mate",
        "pk": 207,
        "fields": {
            "candidate": 302,
            "running_mate": 311
        }
    }
]

campaignTrail_temp.credits = "Siddhartha"

campaignTrail_temp.global_parameter_json = [
    {
        "model": "campaign_trail.global_parameter",
        "pk": 1,
        "fields": {
            "vote_variable": 1.125,
            "max_swing": 0.12,
            "start_point": 0.94,
            "candidate_issue_weight": 10,
            "running_mate_issue_weight": 3,
            "issue_stance_1_max": -0.71,
            "issue_stance_2_max": -0.3,
            "issue_stance_3_max": -0.125,
            "issue_stance_4_max": 0.125,
            "issue_stance_5_max": 0.3,
            "issue_stance_6_max": 0.71,
            "global_variance": 0.01,
            "state_variance": 0.005,
            "question_count": 30,
            "default_map_color_hex": "#C9C9C9",
            "no_state_map_color_hex": "#999999"
        }
    }
]

campaignTrail_temp.opponents_default_json = [
    {
        "election": 21,
        "candidates": [
            300,
            301,
            302,
            303,
            312
        ]
    }
]

campaignTrail_temp.opponents_weighted_json = [
    {
        "election": 21,
        "candidates": [
            300,
            301,
            302,
            303,
            312
        ]
    }
]

campaignTrail_temp.temp_election_list = [
    {
        "id": 21,
        "year": 2020,
        "is_premium": 0,
        "display_year": "2025-2028: Twilight Of A Republic"
    }
]

jet_data = {
    "headerColor": "#12141c",
    "windowColor": "#3e4e65",
    "containerColor": "#212730",
    "innerWindowColor": "#3e4e65",
    "bannerImageUrl": "https://files.catbox.moe/3qb976.jpg",
    "backgroundImageUrl": "https://i.imgur.com/j52LUJC.png",
    "endingTextColor": "#ffffff",
    "customQuote": "",
    "gameTitle": ""
}

//#startcode


corrr = '\n              <h2></h2>\n            ';


nct_stuff.themes[nct_stuff.selectedTheme].coloring_title = "#12141c";

nct_stuff.themes[nct_stuff.selectedTheme].coloring_window = "#3e4e65";

document.getElementsByClassName("game_header")[0].style.backgroundColor = nct_stuff.themes[nct_stuff.selectedTheme].coloring_title;

$("#game_window")[0].style.backgroundColor = nct_stuff.themes[nct_stuff.selectedTheme].coloring_window;

$(".container")[0].style.backgroundColor = "#212730";

document.getElementById("header").src = "https://files.catbox.moe/3qb976.jpg";

document.body.background = "https://i.imgur.com/j52LUJC.png";

document.head.innerHTML += "<style>#results_container {color:#ffffff;} .inner_window_w_desc {background-color:#3e4e65!important;}</style>";

$("#game_window")[0].style.backgroundImage = "url(https://files.catbox.moe/bsq8gl.png)"

$("#game_window")[0].style.borderColor = "#12141c"

$(".container")[0].style.border = ".2em solid #12141c"

quotes = [""];
customquote = quotes[Math.floor((Math.random() * quotes.length))];

corrr = `
  <h2 style="color: #68829c; font-style: normal;">
    Twilight Of A Republic
  </h2>
`;

nct_stuff.themes[nct_stuff.selectedTheme].text_col = "white"

campaignTrail_temp.modBoxTheme = { "header_color": "#12141c", "header_image_url": "https://files.catbox.moe/23zoso.png", "header_text_color": "#ffffff", "description_text_color": "#ffffff", "description_background_color": "#3e4e65", "main_color": "#212730", "secondary_color": "#12141c", "ui_text_color": "#FFFFFF" }

// Custom favicon
$("#dynamic-favicon").attr("href", "https://files.catbox.moe/68x1jv.png");

RecReading=true

  campaignTrail_temp.credits = "<button onclick='credits()'>Siddhartha</button>";
  
window.credits = function() {
  const creditsList = ["Siddhartha, for the writing & coding.", "Code 1 exported by C0SM0.", "", "Some codes made by Mangolith, Thatchmaster, the 2023NL Team, & DecStarG."];

  const text = "This code 1 was made by...\n\n" + creditsList.join('\n');

  alert(text);
}

HistHexcolour=["#1f2e4f","#4f211f","#321f4f","#264f1f"];
    HistName=[" Gavin Newsom"," JD Vance"," Joe Manchin"," Jill Stein/Others"];
    HistEV=[270,268,0,0];
    HistPV=["77,321,500","76,378,555","1,742,725","950,577"];
    HistPVP=["49.2%","48.6%","1.2%","0.8%"];

document.getElementById("inner_window_1").children[1].innerHTML =  `<li>Hello, dear player. Welcome to <b><span style="color: #12141c;">Twilight Of A Republic</span></b>.</li><li>Play as <b><span style="color: #1d365e;">Chairman Ken Martin</span></b> and find out if you can save the Democrats from eternal damnation.</li><li>As Chairman Martin, you will answer questions about the Democrats' platform and positions, and also about their campaign strategy.</li><li>The answers will choose the candidate that'll be nominated and affect the party's popularity for better or worse.</li><li>Walk the fine line between appealing to your base and winning a majority of the votes.</li><li>Additionally, the game contains Choose Your Own Adventure elements and secret endings.</li><li>Get ready to save America.</li>`;

document.getElementById('game_start').innerHTML = '<b>Let Us Commence.</b>';

const customStyling = document.createElement("style");
customStyling.innerHTML = `#map_container {
    background-image: url("https://files.catbox.moe/ttyzcy.png");
    background-size: cover;
}`;
customStyling.id=`map_image`
document.head.appendChild(customStyling);

    e.SelectText = "Please select the election you will run in:"
    e.CandidText = "Please select your party:"
    e.VpText = "Please select your chairperson:"

    e.ElectionPopup = "Election night has arrived. Pray for victory, Ken."
    e.WinPopup = "Congrats, Ken."
    e.LosePopup = "Damn it, Ken."

var element = document.getElementById('my-invisible-element');
if(!element){
function changeIntroDescription() {
  introObserver.disconnect();

  const introTitle = document.querySelector("#inner_window_1 h3");
  const listItems = document.querySelectorAll("#inner_window_1 ul li");

  if (introTitle) {
    introTitle.textContent = "Do you have what it takes to save a dying party?";
  }

  if (listItems) {
    listItems.forEach(item => {
      if (item.textContent.includes('candidate')) {
        item.textContent = item.textContent.replace('candidate', 'party');
      }
      if (item.textContent.includes('states')) {
        item.textContent = item.textContent.replace('states', 'states');
      }
      if (item.textContent.includes('Walk the fine line between appealing to your base and winning a majority of the votes.')) {
        item.textContent = 'Walk the fine line between appealing to your base and winning a majority of the votes.';
      }
    });
  }

  introObserver.observe(document.documentElement, { childList: true, subtree: true });
}
if(!introObserver){
  var introObserver = new MutationObserver(changeIntroDescription);
  introObserver.observe(document.documentElement, { childList: true, subtree: true });
}
function modifyForm(){
  modifiedFormobserver.disconnect();

  const form = document.querySelector('form[name="game_type_selection"]');

  if (form) {
    const select = form.querySelector('select[name="game_type_id"]');
    const h3 = form.querySelector('h3');
    const option = select.querySelector('option[value="1"]');

    if (option && option.textContent !== 'Default (Winner-Take-All)') {
      option.textContent = 'Winner-Take-All)';
    }
    if (select && select.querySelector('option[value="2"]')) {
      const queryTwo = select.querySelector('option[value="2"]');
      if (queryTwo) {
        queryTwo.remove();
      }
    }
    if (h3 && h3.textContent !== 'Select your game mode.') {
      h3.textContent = 'Select your game mode.';
    }
  }
  modifiedFormobserver.observe(document.documentElement, { childList: true, subtree: true });
}
if(!modifiedFormobserver){
  var modifiedFormobserver = new MutationObserver(modifyForm);
  modifiedFormobserver.observe(document.documentElement, { childList: true, subtree: true });
}
function changeOpponentSelectionDescription() {
  selectionObserver.disconnect();

  const opponentSelectionDescription = document.getElementById("opponent_selection_description_window");
  
  if (opponentSelectionDescription) {
    opponentSelectionDescription.innerHTML = `<p><strong>Use the default method of allocating electoral votes for each state.</strong></p><p>In the vast majority of cases, states use a winner-take-all method. For instance, if Candiate A defeats Candidate B in a state, worth 20 electoral votes, Candidate A will usually win all 20 votes.</p><p>This method tends to concentrate the election into a handful of swing states. It also makes it difficult for third-party candidates to win electoral votes. On the other hand, it is easier for a single candidate to gain an overall majority of the electoral votes.</p>`;
  }
  selectionObserver.observe(document.documentElement, { childList: true, subtree: true });
}
if(!selectionObserver){
  var selectionObserver = new MutationObserver(changeOpponentSelectionDescription);
  selectionObserver.observe(document.documentElement, { childList: true, subtree: true });
}
function updateCandidateForm() {
  formobserver.disconnect();
  const heading = document.querySelector("#candidate_form form h3");

  if (heading) {
    heading.textContent = "Please select your party:";
  }
  formobserver.observe(document.documentElement, { childList: true, subtree: true });
}
if(!formobserver){
  var formobserver = new MutationObserver(updateCandidateForm);
  formobserver.observe(document.documentElement, { childList: true, subtree: true });
}
function updateRunningMateForm() {
  runformobserver.disconnect();
  const heading = document.querySelector("#running_mate_form form h3");

  if (heading) {
    heading.textContent = "Please select your chairperson:";
  }
  runformobserver.observe(document.documentElement, { childList: true, subtree: true });
}
if(!runformobserver){
var runformobserver = new MutationObserver(updateRunningMateForm);
runformobserver.observe(document.documentElement, { childList: true, subtree: true });
}

function removeCandidateSummary() {
  sumobserver.disconnect();
  const candidateSummary = document.querySelector("#candidate_summary");
  if (candidateSummary) {
    const ulList = candidateSummary.querySelector("ul");
    if (ulList) {
      candidateSummary.removeChild(ulList);
    }
  }
  sumobserver.observe(document.body, {childList: true,subtree: true});
}
if(!sumobserver){
var sumobserver = new MutationObserver(removeCandidateSummary);
sumobserver.observe(document.body, {childList: true,subtree: true});
}

function updateHeader() {
  var gameHeader = document.getElementsByClassName("game_header")[0];

  if (gameHeader.getAttribute("id") !== "modifiedHeader") {
    gameHeader.innerHTML = corrr;
    gameHeader.style.backgroundColor = nct_stuff.themes[nct_stuff.selectedTheme].coloring_title;
    gameHeader.setAttribute("id", "modifiedHeader");
  }
}

var headerobserver = new MutationObserver(updateHeader);
headerobserver.observe(document.documentElement, { childList: true, subtree: true });

var invisibleElement = document.createElement('div');
invisibleElement.style.display = 'none';
invisibleElement.id = 'my-invisible-element';
document.body.appendChild(invisibleElement);
}

function addDynamicCSS() {
    var css = `
        .inner_window_question h3 .mytooltip{
            background-color: #5e7891;
        }

        .mytooltip {
            position: relative;
            display: inline-block;
            cursor: pointer;
            background-color: #5e7891;
        }

        .mytooltip .mytooltiptext {
            width: 240px;
            background-color: #5e7891;
            color: black;
            text-align: center;
            border-radius: 6px;
            padding: 10px;
            position: absolute;
            z-index: 99;
            bottom: 20%;
            left: 20%;
            margin-left: -90px;
            opacity: 0;
            transition: opacity 0.3s;
            border: 1px solid black;
            pointer-events: none;
            font-size: 13px !important;
            line-height: 1.5em !important;
            font-weight: normal !important;
            font-style: normal !important;
        }

        .mytooltip .mytooltiptext img {
            max-width: 240px;
            height: auto;
        }

        .mytooltip:hover .mytooltiptext {
            opacity: 1;
            transition-delay: 0.5s;
        }
    `;

    var styleElem = document.createElement('style');
    styleElem.type = 'text/css';
    
    styleElem.appendChild(document.createTextNode(css));
    
    document.head.appendChild(styleElem);
}


addDynamicCSS();

// Select the node that will be observed for mutations
  const windowsAdvisorTargetNode = document.getElementById("game_window");
  
  // Options for the observer (which mutations to observe)
  const windowsAdvisorConfig = { attributes: true, childList: true, subtree: true };
  
  // Callback function to execute when mutations are observed
  const callback = (mutationList, observer) => {
      visitWindow = document.getElementsByClassName("overlay_window")[0];
  
      if(visitWindow == null || visitWindow.classList.contains("done")) {
          return;
      }
      visitWindow.classList.add("done");
      visitWindow.classList.add("window");
      let titleBar = visitWindow.querySelector("h3");
      titleBar.classList.add("title-bar");
      titleBar.classList.add("title-bar-text")
      titleBar.style.paddingLeft = "3px";
  };
  
  class Song {
    constructor(title, artist, coverLink, audioLink) {
      this.title = title;
      this.artist = artist;
      this.coverLink = coverLink;
      this.audioLink = audioLink;
    }
    getTitle() {
      return this.title;
    }
  
    getArtist() {
      return this.artist;
    }
  
    getCoverLink() {
      return this.coverLink;
    }
  
    getAudioLink() {
      return this.audioLink;
    }
  }
  
  class Playlist {
    constructor() {
      this.songs = [];
      this.currentSongIndex = 0;
    }
  
    addSong(song) {
      this.songs.push(song);
    }
  
    getCurrentSong() {
      return this.songs[this.currentSongIndex];
    }
  
    playNext() {
      this.currentSongIndex = (this.currentSongIndex + 1) % this.songs.length;
    }
  
    playPrevious() {
      this.currentSongIndex = (this.currentSongIndex - 1 + this.songs.length) % this.songs.length;
    }
  }
  window.Playlist=Playlist
  window.Song=Song
  
  function changePlaylist(newPlaylist) {
    playlist = newPlaylist;
    playlist.currentSongIndex = 0;
    updateUI(playlist);
    const audio = document.getElementById("audio");
    audio.src = playlist.getCurrentSong().audioLink;
    audio.play();
  }
  window.changePlaylist=changePlaylist
  
  function updateUI(playlist) {
      const currentSong = playlist.getCurrentSong();
      var player = document.getElementById("player");
      player.querySelector("#cover").src = currentSong.getCoverLink();
      player.querySelector("#title").textContent = currentSong.getTitle();
      player.querySelector("#artist").textContent = currentSong.getArtist();
  }
  
  window.updateUI=updateUI
  
  
  function setupMusicPlayer() {
    playlist = new Playlist();
  
  
    const song1 = new Song(
      "Liberation",
      "Muse",
      "https://files.catbox.moe/miqktn.jpg",
      "https://files.catbox.moe/oupkkt.mp3"
    );
    
    const song2 = new Song(
      "Dystopia",
      "Starset",
      "https://files.catbox.moe/v5thur.jpg",
      "https://audio.jukehost.co.uk/8APUld9DyaoQDIFcOVACdC8xR42WpSsj"
    );
  
    const song3 = new Song(
      "Hero",
      "Skillet",
      "https://upload.wikimedia.org/wikipedia/en/3/3e/Skillet_hero.png",
      "https://audio.jukehost.co.uk/QbPFqrvxOHJV4GmhZtdWOR3oHSVXprdP"
    );
  
    const song4 = new Song(
      "99 Revolutions",
      "Green Day",
      "https://files.catbox.moe/n3wi1e.jpg",
      "https://files.catbox.moe/onl2po.mp3"
    );
  
    const song5 = new Song(
      "Know Your Enemy",
      "Rage Against The Machine",
      "https://files.catbox.moe/9dulmd.jpg",
      "https://files.catbox.moe/qhu8tl.mp3"
    );
  
    const song6 = new Song(
      "Which Side Are You On",
      "Dropkick Murphys",
      "https://res.cloudinary.com/epitaph/image/upload/c_fill,f_auto,h_925,q_auto,w_925/v1/epitaph/releases/0045778043064.png",
      "https://files.catbox.moe/ljfuwb.mp3"
    );
  
    const song7 = new Song(
      "Age Of Unreason",
      "Bad Religion",
      "https://files.catbox.moe/bai46d.jpg",
      "https://files.catbox.moe/ylmec6.mp3"
    );
  
    playlist.addSong(song1);
    playlist.addSong(song2);
    playlist.addSong(song3);
    playlist.addSong(song4);
    playlist.addSong(song5);
    playlist.addSong(song6);
    playlist.addSong(song7);
  
    const playerContainer = document.createElement("div");
    playerContainer.id = "player";
  
   const displayBox = document.createElement("div");
  displayBox.id = "display-box";
  
  const coverElement = document.createElement("img");
  coverElement.id = "cover";
  displayBox.appendChild(coverElement);
  
  const infoContainer = document.createElement("div");
  infoContainer.id = "info-container";
  infoContainer.style.backgroundImage = "url('https://i.imgur.com/BB1ejv6.png')";
  infoContainer.style.backgroundSize = "cover"; // Optional: adjust based on your needs
  infoContainer.style.color = "white"; // Set text color to white
  
  const songInfo = document.createElement("div");
  songInfo.id = "song-info";
  
  const titleElement = document.createElement("h3");
  titleElement.id = "title";
  titleElement.style.fontWeight = 'normal'; // Make it normal as per previous request
  songInfo.appendChild(titleElement);
  
  const artistElement = document.createElement("p");
  artistElement.id = "artist";
  songInfo.appendChild(artistElement);
  
  infoContainer.appendChild(songInfo);
  displayBox.appendChild(infoContainer);
  
  playerContainer.appendChild(displayBox);
  
  const controlsContainer = document.createElement("div");
  controlsContainer.id = "controls-container";
  
  const controls = document.createElement("div");
  controls.id = "controls";
  
  const prevButton = document.createElement("img");
  prevButton.id = "prevButton";
  prevButton.src = "https://i.imgur.com/imIqTEA.png";
  prevButton.alt = "Previous";
  controls.appendChild(prevButton);
  
  const playPauseButton = document.createElement("img");
  playPauseButton.id = "playPauseButton";
  playPauseButton.src = "https://i.imgur.com/oQbfTxw.png"; // Set the default play image
  playPauseButton.alt = "Play/Pause";
  controls.appendChild(playPauseButton);
  
  const nextButton = document.createElement("img");
  nextButton.id = "nextButton";
  nextButton.src = "https://i.imgur.com/7TtaN04.png";
  nextButton.alt = "Next";
  controls.appendChild(nextButton);
  
  controlsContainer.appendChild(controls);
  
  playPauseButton.addEventListener("click", function () {
    const audio = document.getElementById("audio");
    if (audio.paused) {
      audio.play();
      playPauseButton.src = "https://i.imgur.com/oQbfTxw.png"; // Set the pause image
    } else {
      audio.pause();
      playPauseButton.src = "https://i.imgur.com/ttdoyfG.png"; // Set the play image
    }
  });
  
  nextButton.addEventListener("click", function () {
    playlist.playNext();
    updateUI(playlist);
    const audio = document.getElementById("audio");
    audio.src = playlist.getCurrentSong().audioLink;
    audio.play();
  });
  
  prevButton.addEventListener("click", function () {
    playlist.playPrevious();
    updateUI(playlist);
    const audio = document.getElementById("audio");
    audio.src = playlist.getCurrentSong().audioLink;
    audio.play();
  });
  
    const progressBarContainer = document.createElement("div");
    progressBarContainer.id = "progress-bar-container";
  
    const progressBar = document.createElement("progress");
    progressBar.type = "range";
    progressBar.id = "progress-bar";
    progressBar.value = "0";
    progressBar.max = "100";
  
  
    progressBarContainer.appendChild(progressBar);
    controlsContainer.appendChild(progressBarContainer);
    playerContainer.appendChild(controlsContainer);
  
   const volumeContainer = document.createElement("div");
    volumeContainer.id = "volume-container";
  
  const volumeLabel = document.createElement("img");
  volumeLabel.src = "https://i.imgur.com/0BJYsXt.png";
  volumeLabel.alt = "Volume";
  volumeContainer.appendChild(volumeLabel);
  
    const volumeSliderContainer = document.createElement("div");
    volumeSliderContainer.classList.add("is-vertical");
    volumeSliderContainer.style.marginLeft = "23%";
    volumeSliderContainer.style.height = "126px";
  
    const volumeSlider = document.createElement("input");
    volumeSlider.type = "range";
    volumeSlider.id = "volumeSlider";
    volumeSlider.min = 0;
    volumeSlider.max = 9;
    volumeSlider.step = 1;
    volumeSlider.value = 1; // Initial volume
  
    volumeSliderContainer.appendChild(volumeSlider);
  
    const volumeDisplay = document.createElement("span");
    volumeDisplay.id = "volume-display";
    volumeDisplay.style.fontWeight = 'bold'; 
    volumeDisplay.style.display = 'none';
    volumeDisplay.textContent = "1";
  
    volumeContainer.appendChild(volumeSliderContainer);
    volumeContainer.appendChild(volumeDisplay);
  
    playerContainer.appendChild(volumeContainer);
  
    gameWindow_player.insertAdjacentElement("afterend", playerContainer);
  
  
    function updateProgressBar() {
      const audio = document.getElementById("audio");
      const progress = (audio.currentTime / audio.duration) * 100;
      try{progressBar.value = progress}
    catch{}
    }
  
   
    progressBar.addEventListener("input", function () {
      const audio = document.getElementById("audio");
      const seekTime = (progressBar.value / 100) * audio.duration;
      audio.currentTime = seekTime;
    });
  
    const audio = document.createElement("audio");
    audio.id = "audio";
    audio.src = playlist.getCurrentSong().audioLink;
    audio.volume = 1/9;
  
    audio.addEventListener("timeupdate", updateProgressBar);
    audio.addEventListener("ended", function () {
      // Play the next song when the current song ends
      playlist.playNext();
      updateUI(playlist);
      audio.src = playlist.getCurrentSong().audioLink;
      audio.play();
    });
  
      let currentVolume = 1; // Initial volume
  
    volumeSlider.addEventListener("input", function () {
      currentVolume = parseInt(volumeSlider.value, 10);
      updateVolumeDisplay();
      updateAudioVolume();
    });
  
    function updateVolumeDisplay() {
      volumeDisplay.textContent = currentVolume;
    }
  
     function updateAudioVolume() {
      const audio = document.getElementById("audio");
      audio.volume = currentVolume / 9; // Set volume between 0 and 1
    }
  
    document.body.appendChild(audio);
    audio.play();
  
    // Update the UI when the page loads
    updateUI(playlist);
  }
  
  const style = document.createElement("style");
  style.textContent = `
  #player {
      border: 3px solid #12141c; /* Add your desired border style */
      display: flex;
      flex-direction: row;
    height:191px;
      background-Image: url("https://i.imgur.com/Ok791w6.png");
    }
  
    #display-box {
      display: flex;
      align-items: center;
      width: 50%;
    }
  
    #cover {
      width: 176px;
    height:176px;
    }
  
    #info-container {
      display: flex;
      flex-direction: row;
      height:178px;
    width:127px;
    margin-top: 3px;
    }
  
    #song-info {
      width: 100%;
    padding:5px;
    }
  
    #controls-container {
      display: flex;
      flex-direction: column;
      align-items: center;
      margin: 10px;
      width:100%;
    padding-top:15px;
  
    }
    .is-vertical #volumeSlider {
    width: 16px;
    appearance: slider-vertical;
  }
  
    #controls {
      display: flex;
      flex-direction: row;
      justify-content: center;
      width: 80%;
    }
  
    #progress-bar-container {
      width: 100%;
    }
  
    #progress-bar {
      width: 80%;
      margin: auto;
      display: flex;
      margin-Top: 20px;
    }
    
  `;

document.head.appendChild(style);

const gameWindow_player = document.getElementById("game_window");
//use this function directly or put it in an event listener to start the music on the press of a certain button
setupMusicPlayer();

//#endcode
